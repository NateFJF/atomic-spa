{
    "pipes": [],
    "interfaces": [
        {
            "name": "FilterTab",
            "id": "interface-FilterTab-c52361acedb37a22315a2ddf6bbceafd3cf94e64c1594615cd4b0e1f92d479d5eda84ea4984a3d40c7a7ebd1e3d4e75999c60c10fadfa3bec6d4854cfc7ea7da",
            "file": "src/app/components/molecules/filterTabGroup/filterTabGroup.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, Output, EventEmitter, signal, WritableSignal, computed } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FilterTabButtonComponent } from '../../atoms/filterTabButton/filterTabButton.component';\n\nexport interface FilterTab {\n  label: string;\n  count: number;\n}\n\n@Component({\n  selector: 'app-tab-group',\n  standalone: true,\n  imports: [CommonModule, FilterTabButtonComponent],\n  templateUrl: './filterTabGroup.component.html',\n  styleUrls: ['./filterTabGroup.component.scss'],\n})\nexport class TabGroupComponent {\n  @Input() tabs: FilterTab[] = [];\n\n  // signal to track the selected tab label\n  selectedTab: WritableSignal<string> = signal(''); // signal-based\n\n  @Output() tabSelected = new EventEmitter<string>();\n\n  selectTab(label: string): void {\n    this.selectedTab.set(label);\n    this.tabSelected.emit(label);\n  }\n\n  isActive(label: string): boolean {\n    return this.selectedTab() === label;\n  }\n}\n",
            "properties": [
                {
                    "name": "count",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "FilterTab",
            "id": "interface-FilterTab-75009c90815b884a0e28d9aab5e49943d3319c9592c614cbf620d563a27f7b23e73dc8681e8096a327841430a52751c9792ee7fdf659bea5babf53fb6ab187ee-1",
            "file": "src/app/components/organisms/filterActionGroup/filterActionGroup.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TabGroupComponent } from '../../molecules/filterTabGroup/filterTabGroup.component';\nimport { ActionBarComponent } from '../../molecules/actionBar/actionBar.component';\n\nexport interface FilterTab {\n  label: string;\n  count: number;\n  state: string;\n  active?: boolean;\n}\n\n@Component({\n  selector: 'app-filter-action-group',\n  standalone: true,\n  imports: [CommonModule, TabGroupComponent, ActionBarComponent],\n  templateUrl: './filterActionGroup.component.html',\n  styleUrls: ['./filterActionGroup.component.scss'],\n})\nexport class FilterActionGroupComponent {\n  @Input() tabs: FilterTab[] = [];\n\n  @Output() tabChanged = new EventEmitter<string>();\n  @Output() exportClicked = new EventEmitter<void>();\n  @Output() filterClicked = new EventEmitter<void>();\n\n  handleTabChange(tab: string) {\n    this.tabChanged.emit(tab);\n  }\n\n  handleExport() {\n    this.exportClicked.emit();\n  }\n\n  handleFilter() {\n    this.filterClicked.emit();\n  }\n}\n",
            "properties": [
                {
                    "name": "active",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "count",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "FilterTab-1"
        },
        {
            "name": "NavTabItem",
            "id": "interface-NavTabItem-5a3f236bba8b3fe2676627dece4ebbacbbd85270f9cc1be025635cba8242a792f694d09659b6e48a2a21f49259fba8911b4ccf9dd5d8331fed7dc230e2ea2606",
            "file": "src/app/components/organisms/navTabGroup/navTabGroup.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NavTabComponent } from '../../molecules/navTab/navTab.component';\n\nexport interface NavTabItem {\n  label: string;\n  icon: string;\n  route: string;\n  active?: boolean;\n}\n\n@Component({\n  selector: 'app-nav-tab-group',\n  standalone: true,\n  imports: [CommonModule, NavTabComponent],\n  templateUrl: './navTabGroup.component.html',\n  styleUrls: ['./navTabGroup.component.scss'],\n})\nexport class NavTabGroupComponent {\n  @Input() tabs: NavTabItem[] = [];\n}\n",
            "properties": [
                {
                    "name": "active",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "route",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "StatCardItem",
            "id": "interface-StatCardItem-132c7cce5907fbc1ae9c76fad76709dd8f45c4ddad5d45de80493ab0386503224cf698f096b69f1e66674fd4157f0708c47a79c6dbf91e24de77c6190440f6a1",
            "file": "src/app/components/organisms/statCardGroup/statCardGroup.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StatCardComponent } from '../../molecules/statCard/statCard.component';\n\nexport interface StatCardItem {\n  count: number | string;\n  label: string;\n  icon: string;\n}\n\n@Component({\n  selector: 'app-stat-card-group',\n  standalone: true,\n  imports: [CommonModule, StatCardComponent],\n  templateUrl: './statCardGroup.component.html',\n  styleUrls: ['./statCardGroup.component.scss'],\n})\nexport class StatCardGroupComponent {\n  @Input() cards: StatCardItem[] = [];\n}\n",
            "properties": [
                {
                    "name": "count",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "TableRowData",
            "id": "interface-TableRowData-30aa7958f38102f869c10c3ee9e3b3613f202401be72ab092d0a6ae158c92fe6fff93505ca75872bb055e66fc1d6354c1975c45b1c6a085001fa4e94da7329b7",
            "file": "src/app/components/organisms/tableRowGroup/tableRowGroup.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TableRowComponent } from '../../molecules/tableRow/tableRow.component';\n\nexport interface TableRowData {\n  id: string | number;\n  state: string;\n  fileNumber: string;\n  selected?: boolean;\n}\n\n@Component({\n  selector: 'app-table-row-group',\n  standalone: true,\n  imports: [CommonModule, TableRowComponent],\n  templateUrl: './tableRowGroup.component.html',\n  styleUrls: ['./tableRowGroup.component.scss'],\n})\nexport class TableRowGroupComponent {\n  @Input() rows: TableRowData[] = [];\n\n  @Output() rowSelected = new EventEmitter<{ id: string | number; selected: boolean }>();\n  @Output() consultClicked = new EventEmitter<string | number>();\n\n  handleSelectChange(id: string | number, value: any) {\n  const checked = value as boolean;\n  this.rowSelected.emit({ id, selected: checked });\n}\n\n  handleConsultClick(id: string | number) {\n    this.consultClicked.emit(id);\n  }\n}\n",
            "properties": [
                {
                    "name": "fileNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "ActionBarComponent",
            "id": "component-ActionBarComponent-db1ef616cf3e971d5ae1678a56e35477b422e91e96f4fd75f751fff3aaf653861e6c0b3af1ab1c24752232a703b1ef24a48a4560540e473e9caa114b5182bd3a",
            "file": "src/app/components/molecules/actionBar/actionBar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-action-bar",
            "styleUrls": [
                "./actionBar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./actionBar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "exportClicked",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter"
                },
                {
                    "name": "filterClicked",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onExportClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onFilterClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonComponent } from '../../atoms/button/button.component';\n\n@Component({\n  selector: 'app-action-bar',\n  standalone: true,\n  imports: [CommonModule, ButtonComponent],\n  templateUrl: './actionBar.component.html',\n  styleUrls: ['./actionBar.component.scss'],\n})\nexport class ActionBarComponent {\n  @Output() exportClicked = new EventEmitter<void>();\n  @Output() filterClicked = new EventEmitter<void>();\n\n  onExportClick() {\n    this.exportClicked.emit();\n  }\n\n  onFilterClick() {\n    this.filterClicked.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".action-bar {\r\n  display: flex;\r\n  gap: 0.5rem; // more natural spacing between buttons\r\n  align-items: center;\r\n\r\n  app-button {\r\n    //padding: 0.4rem 0.2rem;\r\n    display: flex;\r\n    align-items: center;\r\n    //transition: background-color 0.2s;\r\n\r\n    // This ensures icons follow text colour\r\n    app-icon, mat-icon {\r\n      color: inherit;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./actionBar.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"action-bar\">\n  <app-button\n    label=\"Filters\"\n    icon=\"filter_list\"\n    iconPosition=\"end\"\n    variant=\"secondary\"\n    (click)=\"onFilterClick()\"\n    borderRadius=\"9999px\"\n    width=\"auto\"\n    height=\"35px\"\n    fontSize=\"14px\"\n\n  />\n\n  <app-button\n    label=\"Export\"\n    icon=\"download\"\n    iconPosition=\"start\"\n    variant=\"primary\"\n    (click)=\"onExportClick()\"\n    borderRadius=\"8px\"\n    width=\"auto\"\n    height=\"35px\"\n    fontSize=\"14px\"\n  />\n</div>\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-ca1de2f7d71e8f1f8d956e6b0e1a54e0a71cb1fad6c2ae3515acc69a58b76f7621a05c24f2b766bc304261529f2cf64a17b0d9669a81f6f6be8cc82918ce8589",
            "file": "src/app/app.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "template": "<app-main-page />",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MainPageComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { MainPageComponent } from './components/pages/mainPage/mainPage.component';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [MainPageComponent],\r\n  template: '<app-main-page />',\r\n})\r\nexport class AppComponent {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "BadgeComponent",
            "id": "component-BadgeComponent-2c6090387035c7fd59270a0cd9d97c93f68845bb588aa74d32dbd4e2f7d8acae1abd8f5734d7b8a3b8b78f1af5561362557d7e30f09fbb098953383f7fde7d77",
            "file": "src/app/components/atoms/badge/badge.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-badge",
            "styleUrls": [
                "./badge.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./badge.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "fontSize",
                    "defaultValue": "'0.875rem'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "fontWeight",
                    "defaultValue": "'500'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "height",
                    "defaultValue": "'20px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "\"default\" | \"info\" | \"success\" | \"warning\" | \"danger\"",
                    "decorators": []
                },
                {
                    "name": "width",
                    "defaultValue": "'auto'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-badge',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './badge.component.html',\n  styleUrls: ['./badge.component.scss'],\n})\nexport class BadgeComponent {\n  @Input() label: string = '';\n  @Input() variant: 'default' | 'info' | 'success' | 'warning' | 'danger' = 'default';\n  @Input() fontSize: string = '0.875rem';\n  @Input() fontWeight: string = '500';\n  @Input() height: string = '20px'; // Default height\n  @Input() width: string = 'auto'; // Default width\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".badge {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 6px;\r\n  text-align: center;\r\n  white-space: nowrap;\r\n  box-sizing: border-box;\r\n  padding: 0 0.75rem; // Horizontal padding only, height is controlled via input\r\n\r\n  &.default {\r\n    background-color: #e0e0e0;\r\n    color: #333;\r\n    border: 1px solid #333;\r\n  }\r\n\r\n  &.info {\r\n    background-color: #d0e7ff;\r\n    color: #0056b3;\r\n    border: 1px solid #0056b3;\r\n  }\r\n\r\n  &.success {\r\n    background-color: #d4edda;\r\n    color: #155724;\r\n    border: 1px solid #155724;\r\n  }\r\n\r\n  &.warning {\r\n    background-color: #fff3cd;\r\n    color: #856404;\r\n    border: 1px solid #856404;\r\n  }\r\n\r\n  &.danger {\r\n    background-color: #f8d7da;\r\n    color: #721c24;\r\n    border: 1px solid #721c24;\r\n  }\r\n}\r\n",
                    "styleUrl": "./badge.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<span\n  class=\"badge\"\n  [ngClass]=\"variant\"\n  [style.fontSize]=\"fontSize\"\n  [style.fontWeight]=\"fontWeight\"\n  [style.height]=\"height\"\n  [style.width]=\"width\"\n>\n  {{ label }}\n</span>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-a906cbef31ddd726a8f32401b4aa3e528199f23af81a0e5b0597164256545510e649548c8808b446512093a805931c33741832b8def78ad399ececbb650fb68b",
            "file": "src/app/components/atoms/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "borderless",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "borderRadius",
                    "defaultValue": "'0px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "fontSize",
                    "defaultValue": "'1rem'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "height",
                    "defaultValue": "'auto'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "iconPosition",
                    "defaultValue": "'start'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "\"start\" | \"end\"",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "\"button\" | \"submit\" | \"reset\"",
                    "decorators": []
                },
                {
                    "name": "variant",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "\"primary\" | \"secondary\" | \"danger\"",
                    "decorators": []
                },
                {
                    "name": "width",
                    "defaultValue": "'auto'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "IconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IconComponent } from '../icon/icon.component';\r\n\r\n@Component({\r\n  selector: 'app-button',\r\n  standalone: true,\r\n  imports: [CommonModule, IconComponent],\r\n  templateUrl: './button.component.html',\r\n  styleUrls: ['./button.component.scss'],\r\n})\r\nexport class ButtonComponent {\r\n  @Input() label: string = 'Button';\r\n  @Input() type: 'button' | 'submit' | 'reset' = 'button';\r\n  @Input() disabled: boolean = false;\r\n  @Input() variant: 'primary' | 'secondary' | 'danger' = 'primary';\r\n  @Input() icon?: string; // Material icon name\r\n  @Input() iconPosition: 'start' | 'end' = 'start'; // default is front\r\n  @Input() borderRadius: string = '0px'; // Default square\r\n  @Input() borderless: boolean = false; // Default is not borderless (with border)\r\n  @Input() width: string = 'auto'; // Default is auto width\r\n  @Input() height: string = 'auto'; // Default is auto height\r\n  @Input() fontSize: string = '1rem'; // Default font size\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "button {\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 0.5rem;\r\n  font-weight: 600;\r\n  padding: 0.4rem 0.9rem;\r\n  cursor: pointer;\r\n  background-color: white;\r\n  border: 2px solid;\r\n  border-radius: 0px;\r\n  transition: background-color 0.2s, color 0.2s, border-color 0.2s;\r\n\r\n  &.primary {\r\n    border-color: #af15fd;\r\n    color: #af15fd;\r\n\r\n    &:hover {\r\n      background-color: rgba(175, 21, 253, 0.1);\r\n    }\r\n  }\r\n\r\n  &.secondary {\r\n    border-color: #6c757d;\r\n    color: #6c757d;\r\n\r\n    &:hover {\r\n      background-color: rgba(108, 117, 125, 0.1);\r\n    }\r\n  }\r\n\r\n  &.danger {\r\n    border-color: #dc3545;\r\n    color: #dc3545;\r\n\r\n    &:hover {\r\n      background-color: rgba(220, 53, 69, 0.1);\r\n    }\r\n  }\r\n\r\n  &:disabled {\r\n    opacity: 0.6;\r\n    cursor: not-allowed;\r\n    background-color: #f9f9f9;\r\n    color: #ccc;\r\n    border-color: #ccc;\r\n  }\r\n\r\n  app-icon {\r\n    color: inherit;\r\n  }\r\n}\r\n\r\nbutton.borderless {\r\n  border: none !important;\r\n  background-color: transparent !important;\r\n  padding: 0;\r\n  box-shadow: none;\r\n\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.05);\r\n  }\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n    background-color: transparent;\r\n    cursor: not-allowed;\r\n  }\r\n}\r\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<button\r\n  [type]=\"type\"\r\n  [disabled]=\"disabled\"\r\n  [ngClass]=\"[variant, borderless ? 'borderless' : '']\"\r\n  [style.borderRadius]=\"borderRadius\"\r\n  [style.width]=\"width\"\r\n  [style.height]=\"height\"\r\n  [style.fontSize]=\"fontSize\"\r\n>\r\n  <ng-container *ngIf=\"icon && iconPosition === 'start'\">\r\n    <app-icon [name]=\"icon\" size=\"20px\" />\r\n  </ng-container>\r\n\r\n  <span>{{ label }}</span>\r\n\r\n  <ng-container *ngIf=\"icon && iconPosition === 'end'\">\r\n    <app-icon [name]=\"icon\" size=\"20px\" />\r\n  </ng-container>\r\n</button>\r\n"
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-696bcf6fa0f162e723d876a91bd24060917f3b901f3fc6988699d5bc6e04aaf1ccdfdde650f51d1a2b10f3e4719aed23cbe78f77e0012b955e8e139a38d476db",
            "file": "src/app/components/atoms/checkbox/checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checkbox",
            "styleUrls": [
                "./checkbox.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "colour",
                    "defaultValue": "'#af15fd'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "checkedChange",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "toggleCheck",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-checkbox',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n})\nexport class CheckboxComponent {\n  @Input() checked: boolean = false;\n  @Input() disabled: boolean = false;\n  @Input() colour: string = '#af15fd';\n  @Output() checkedChange = new EventEmitter<boolean>();\n\n  toggleCheck() {\n    if (!this.disabled) {\n      this.checked = !this.checked;\n      this.checkedChange.emit(this.checked);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".checkbox-wrapper {\r\n  input {\r\n    display: none;\r\n  }\r\n\r\n  .custom-checkbox {\r\n    width: 20px;\r\n    height: 20px;\r\n    border: 2px solid;\r\n    border-radius: 4px;\r\n    display: inline-block;\r\n    position: relative;\r\n\r\n    .checkmark {\r\n      position: absolute;\r\n      top: 1px;\r\n      left: 6px;\r\n      width: 5px;\r\n      height: 12px;\r\n      border: solid;\r\n      border-width: 0 3px 3px 0;\r\n      color: inherit;\r\n      content: '';\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./checkbox.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<label class=\"checkbox-wrapper\" [for]=\"'customCheckbox'\">\n  <input\n    id=\"customCheckbox\"\n    type=\"checkbox\"\n    [checked]=\"checked\"\n    [disabled]=\"disabled\"\n    (change)=\"toggleCheck()\"\n    title=\"Toggle checkbox\"\n  />\n  <span class=\"custom-checkbox\" [style.borderColor]=\"colour\">\n    <span\n      class=\"checkmark\"\n      *ngIf=\"checked\"\n      [style.borderColor]=\"colour\"\n      [style.transform]=\"'rotate(45deg)'\"\n    ></span>\n  </span>\n</label>\n"
        },
        {
            "name": "FilterActionGroupComponent",
            "id": "component-FilterActionGroupComponent-75009c90815b884a0e28d9aab5e49943d3319c9592c614cbf620d563a27f7b23e73dc8681e8096a327841430a52751c9792ee7fdf659bea5babf53fb6ab187ee",
            "file": "src/app/components/organisms/filterActionGroup/filterActionGroup.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-filter-action-group",
            "styleUrls": [
                "./filterActionGroup.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./filterActionGroup.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "tabs",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "FilterTab[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "exportClicked",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter"
                },
                {
                    "name": "filterClicked",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "EventEmitter"
                },
                {
                    "name": "tabChanged",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleExport",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleFilter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleTabChange",
                    "args": [
                        {
                            "name": "tab",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tab",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "TabGroupComponent",
                    "type": "component"
                },
                {
                    "name": "ActionBarComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TabGroupComponent } from '../../molecules/filterTabGroup/filterTabGroup.component';\nimport { ActionBarComponent } from '../../molecules/actionBar/actionBar.component';\n\nexport interface FilterTab {\n  label: string;\n  count: number;\n  state: string;\n  active?: boolean;\n}\n\n@Component({\n  selector: 'app-filter-action-group',\n  standalone: true,\n  imports: [CommonModule, TabGroupComponent, ActionBarComponent],\n  templateUrl: './filterActionGroup.component.html',\n  styleUrls: ['./filterActionGroup.component.scss'],\n})\nexport class FilterActionGroupComponent {\n  @Input() tabs: FilterTab[] = [];\n\n  @Output() tabChanged = new EventEmitter<string>();\n  @Output() exportClicked = new EventEmitter<void>();\n  @Output() filterClicked = new EventEmitter<void>();\n\n  handleTabChange(tab: string) {\n    this.tabChanged.emit(tab);\n  }\n\n  handleExport() {\n    this.exportClicked.emit();\n  }\n\n  handleFilter() {\n    this.filterClicked.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".filter-action-group {\r\n  display: flex;\r\n  justify-content:  space-between;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  gap: 1rem;\r\n\r\n}\r\n",
                    "styleUrl": "./filterActionGroup.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"filter-action-group\">\n  <app-tab-group\n    [tabs]=\"tabs\"\n    (tabSelected)=\"handleTabChange($event)\"\n  />\n\n  <app-action-bar\n    (exportClicked)=\"handleExport()\"\n    (filterClicked)=\"handleFilter()\"\n  />\n</div>\n"
        },
        {
            "name": "FilterTabButtonComponent",
            "id": "component-FilterTabButtonComponent-5dcf800d283cf7724187dc43f91c3a0bc9aa180b8ef22befcc947587c9c60365f1504080df3b41b5394930aa2dbd215a58185ce4130bc95f6ae531bc6358b179",
            "file": "src/app/components/atoms/filterTabButton/filterTabButton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-filter-tab-button",
            "styleUrls": [
                "./filterTabButton.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./filterTabButton.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "active",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "count",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "selected",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonComponent } from '../button/button.component';\n\n@Component({\n  selector: 'app-filter-tab-button',\n  standalone: true,\n  imports: [CommonModule, ButtonComponent],\n  templateUrl: './filterTabButton.component.html',\n  styleUrls: ['./filterTabButton.component.scss'],\n})\nexport class FilterTabButtonComponent {\n  @Input() label: string = '';\n  @Input() count: number = 0;\n  @Input() active: boolean = false;\n\n  @Output() selected = new EventEmitter<void>();\n\n  handleClick(): void {\n    this.selected.emit();\n  }\n\n  get displayText(): string {\n    return `${this.label} (${this.count})`;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  display: inline-block;\r\n\r\n  app-button {\r\n    padding: 0.35rem 0.3rem;\r\n    font-weight: 500;\r\n    font-size: 0.85rem;\r\n    border-width: 2px;\r\n    background-color: white;\r\n\r\n    &.primary {\r\n      border-color: #af15fd;\r\n      color: #af15fd;\r\n\r\n      &:hover {\r\n        background-color: rgba(175, 21, 253, 0.1);\r\n      }\r\n    }\r\n\r\n    &.secondary {\r\n      border-color: #ddd;\r\n      color: #555;\r\n\r\n      &:hover {\r\n        background-color: rgba(0, 0, 0, 0.04);\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./filterTabButton.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "displayText": {
                    "name": "displayText",
                    "getSignature": {
                        "name": "displayText",
                        "type": "string",
                        "returnType": "string",
                        "line": 23
                    }
                }
            },
            "templateData": "<app-button\n  [label]=\"displayText\"\n  [variant]=\"active ? 'primary' : 'secondary'\"\n  [borderRadius]=\"'9999px'\"\n  (click)=\"handleClick()\"\n  width=\"auto\"\n  height=\"35px\"\n  fontSize=\"14px\"\n/>\n"
        },
        {
            "name": "IconComponent",
            "id": "component-IconComponent-968e8b224827f71998ce8ebd6e02f660130c16a63588eba3a8b82d508886a917eda13012dd296b6cf551ec8575792f5c9201d6aa4d60ab55da4ec064b0fa200e",
            "file": "src/app/components/atoms/icon/icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon",
            "styleUrls": [
                "./icon.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./icon.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "colour",
                    "defaultValue": "'inherit'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'20px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-icon',\r\n  standalone: true,\r\n  imports: [CommonModule, MatIconModule],\r\n  templateUrl: './icon.component.html',\r\n  styleUrls: ['./icon.component.scss'],\r\n})\r\nexport class IconComponent {\r\n  @Input() name: string = '';\r\n  @Input() size: string = '20px';\r\n  @Input() colour: string = 'inherit';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-icon {\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  vertical-align: middle;\r\n  font-size: inherit;\r\n  height: 1em;\r\n  width: 1em;\r\n  line-height: 1;\r\n}\r\n",
                    "styleUrl": "./icon.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<mat-icon [style.fontSize]=\"size\" [style.color]=\"colour\">\r\n  {{ name }}\r\n</mat-icon>\r\n"
        },
        {
            "name": "MainGroupTemplateComponent",
            "id": "component-MainGroupTemplateComponent-03ff7f925a6b984d7231f7f1d7b4d6a1814c60ebe2fe7a5c571650a7e02b421937445b806d39282c04e94480cf3c993d4822149991679b4f31a151c46d039a31",
            "file": "src/app/components/templates/mainGroup/mainGroup.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-main-group-template",
            "styleUrls": [
                "./mainGroup.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./mainGroup.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "filterTabs",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "any[]",
                    "decorators": []
                },
                {
                    "name": "navTabs",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "any[]",
                    "decorators": []
                },
                {
                    "name": "statCards",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "any[]",
                    "decorators": []
                },
                {
                    "name": "tableData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "any[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "NavTabGroupComponent",
                    "type": "component"
                },
                {
                    "name": "StatCardGroupComponent",
                    "type": "component"
                },
                {
                    "name": "FilterActionGroupComponent",
                    "type": "component"
                },
                {
                    "name": "TableHeaderComponent",
                    "type": "component"
                },
                {
                    "name": "TableRowGroupComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NavTabGroupComponent } from '../../organisms/navTabGroup/navTabGroup.component';\nimport { StatCardGroupComponent } from '../../organisms/statCardGroup/statCardGroup.component';\nimport { FilterActionGroupComponent } from '../../organisms/filterActionGroup/filterActionGroup.component';\nimport { TableHeaderComponent } from '../../molecules/tableHeader/tableHeader.component';\nimport { TableRowGroupComponent } from '../../organisms/tableRowGroup/tableRowGroup.component';\n\n@Component({\n  selector: 'app-main-group-template',\n  standalone: true,\n  imports: [\n    CommonModule,\n    NavTabGroupComponent,\n    StatCardGroupComponent,\n    FilterActionGroupComponent,\n    TableHeaderComponent,\n    TableRowGroupComponent\n  ],\n  templateUrl: './mainGroup.component.html',\n  styleUrls: ['./mainGroup.component.scss']\n})\nexport class MainGroupTemplateComponent {\n  @Input() navTabs: any[] = [];\n  @Input() statCards: any[] = [];\n  @Input() filterTabs: any[] = [];\n  @Input() tableData: any[] = [];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main-template {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n  padding: 1rem;\r\n  background: #f5f5f5;\r\n}\r\n\r\n.table-section {\r\n  border: 1px solid #ccc;\r\n  border-radius: 6px;\r\n  overflow-x: auto;\r\n  background: white;\r\n}\r\n\r\n\r\napp-stat-card-group {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n  margin: 0;\r\n  box-sizing: border-box;\r\n  padding-bottom: 1rem;\r\n  padding-top: 1rem;\r\n}\r\n\r\napp-filter-action-bar {\r\n  padding-bottom: 2rem;\r\n}\r\n\r\n// app-nav-tab-group {\r\n//   border: 1px dashed red; //Debug\r\n//   min-height: 3rem;\r\n// }\r\n",
                    "styleUrl": "./mainGroup.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"main-template\">\n  <app-nav-tab-group [tabs]=\"navTabs\" />\n\n  <app-stat-card-group [cards]=\"statCards\" />\n\n  <app-filter-action-group [tabs]=\"filterTabs\" />\n\n  <div class=\"table-section\">\n    <app-table-header />\n    <app-table-row-group [rows]=\"tableData\" />\n  </div>\n</div>\n"
        },
        {
            "name": "MainPageComponent",
            "id": "component-MainPageComponent-b4f175fd5ec5d07398d1bb62e88852dbfe8668ffbed07225dfa82f79e941f3e74b8f3c7acfd623cec35f2927c39b17f50edf0b0bbb4c97e5994411c560a0655f",
            "file": "src/app/components/pages/mainPage/mainPage.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-main-page",
            "styleUrls": [
                "./mainPage.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./mainPage.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "filterTabs",
                    "defaultValue": "[\n    { label: 'Total', count: 164, state: 'total', active: true },\n    { label: 'Identity', count: 15, state: 'identity' },\n    { label: 'Post-payment', count: 35, state: 'post' },\n    { label: 'Refund request', count: 13, state: 'refund' },\n    { label: 'Fraud', count: 55, state: 'fraud' },\n    { label: 'Validated', count: 85, state: 'validated' },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "navTabs",
                    "defaultValue": "[\n    { label: 'Today', icon: 'calendar_today', route: '/', active: true },\n    { label: 'Job done', icon: 'check', route: '/done', active: false },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "statCards",
                    "defaultValue": "[\n    { count: 850, label: 'Priority', icon: 'logout' },\n    { count: 850, label: 'Express', icon: 'logout' },\n    { count: 850, label: 'Standard', icon: 'logout' },\n    { count: 850, label: 'Documents waiting', icon: 'logout' },\n    { count: 850, label: 'Unpaid waiting', icon: 'logout' },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "tableData",
                    "defaultValue": "[\n    { id: 1, state: 'Pre-payment', fileNumber: '5509808388', selected: false },\n    { id: 2, state: 'Pre-payment', fileNumber: '5509808388', selected: false },\n    { id: 3, state: 'Pre-payment', fileNumber: '5509808388', selected: false },\n    { id: 4, state: 'Pre-payment', fileNumber: '5509808388', selected: false },\n    { id: 5, state: 'Pre-payment', fileNumber: '5509808388', selected: false },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MainGroupTemplateComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MainGroupTemplateComponent } from '../../templates/mainGroup/mainGroup.component';\n\n@Component({\n  selector: 'app-main-page',\n  standalone: true,\n  imports: [CommonModule, MainGroupTemplateComponent],\n  templateUrl: './mainPage.component.html',\n  styleUrls: ['./mainPage.component.scss'],\n})\nexport class MainPageComponent {\n  navTabs = [\n    { label: 'Today', icon: 'calendar_today', route: '/', active: true },\n    { label: 'Job done', icon: 'check', route: '/done', active: false },\n  ];\n\n  statCards = [\n    { count: 850, label: 'Priority', icon: 'logout' },\n    { count: 850, label: 'Express', icon: 'logout' },\n    { count: 850, label: 'Standard', icon: 'logout' },\n    { count: 850, label: 'Documents waiting', icon: 'logout' },\n    { count: 850, label: 'Unpaid waiting', icon: 'logout' },\n  ];\n\n  filterTabs = [\n    { label: 'Total', count: 164, state: 'total', active: true },\n    { label: 'Identity', count: 15, state: 'identity' },\n    { label: 'Post-payment', count: 35, state: 'post' },\n    { label: 'Refund request', count: 13, state: 'refund' },\n    { label: 'Fraud', count: 55, state: 'fraud' },\n    { label: 'Validated', count: 85, state: 'validated' },\n  ];\n\n  tableData = [\n    { id: 1, state: 'Pre-payment', fileNumber: '5509808388', selected: false },\n    { id: 2, state: 'Pre-payment', fileNumber: '5509808388', selected: false },\n    { id: 3, state: 'Pre-payment', fileNumber: '5509808388', selected: false },\n    { id: 4, state: 'Pre-payment', fileNumber: '5509808388', selected: false },\n    { id: 5, state: 'Pre-payment', fileNumber: '5509808388', selected: false },\n  ];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".page-wrapper {\r\n  background-color: #f5f5f5;\r\n  min-height: 100vh;\r\n  padding: 2rem;\r\n  box-sizing: border-box;\r\n}\r\n",
                    "styleUrl": "./mainPage.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"page-wrapper\">\n  <app-main-group-template\n    [navTabs]=\"navTabs\"\n    [statCards]=\"statCards\"\n    [filterTabs]=\"filterTabs\"\n    [tableData]=\"tableData\"\n  />\n</div>\n"
        },
        {
            "name": "NavTabComponent",
            "id": "component-NavTabComponent-0ad05e8e5315369bfe04e95755d321433f5ff2f5c19c76261e8fec286587a5b09caa8314aa065a454a4aae6a84827d893981d120cf9d4e591f9d7fe0306f9a2f",
            "file": "src/app/components/molecules/navTab/navTab.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-nav-tab",
            "styleUrls": [
                "./navTab.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./navTab.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "active",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "route",
                    "defaultValue": "'/'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "IconComponent",
                    "type": "component"
                },
                {
                    "name": "TextComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { IconComponent } from '../../atoms/icon/icon.component';\nimport { TextComponent } from '../../atoms/text/text.component';\n\n@Component({\n  selector: 'app-nav-tab',\n  standalone: true,\n  imports: [CommonModule, RouterModule, IconComponent, TextComponent],\n  templateUrl: './navTab.component.html',\n  styleUrls: ['./navTab.component.scss'],\n})\nexport class NavTabComponent {\n  @Input() label: string = '';\n  @Input() icon: string = '';\n  @Input() route: string = '/';\n  @Input() active: boolean = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".nav-tab {\r\n  display: inline-flex;\r\n  align-items: center;\r\n  gap: 0.4rem;\r\n  padding: 0.25rem 1rem 0.35rem; // reduced bottom padding\r\n  text-decoration: none;\r\n  color: #6c757d;\r\n  cursor: pointer;\r\n  border-bottom: 2px solid transparent;\r\n  transition: border-color 0.2s, color 0.2s;\r\n\r\n  &.active {\r\n    color: #af15fd;\r\n    border-bottom-color: #af15fd;\r\n  }\r\n\r\n  &:hover {\r\n    color: #bf41fe;\r\n    border-bottom-color: #ce70fd;\r\n  }\r\n\r\n  app-icon,\r\n  app-text {\r\n    display: inline-flex;\r\n    align-items: center;\r\n  }\r\n\r\n  app-text {\r\n    font-size: 0.95rem;\r\n  }\r\n}\r\n",
                    "styleUrl": "./navTab.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<a\n  [routerLink]=\"route\"\n  class=\"nav-tab\"\n  [class.active]=\"active\"\n>\n  <app-icon [name]=\"icon\" size=\"18px\" />\n  <app-text [content]=\"label\" weight=\"medium\" />\n</a>\n"
        },
        {
            "name": "NavTabGroupComponent",
            "id": "component-NavTabGroupComponent-5a3f236bba8b3fe2676627dece4ebbacbbd85270f9cc1be025635cba8242a792f694d09659b6e48a2a21f49259fba8911b4ccf9dd5d8331fed7dc230e2ea2606",
            "file": "src/app/components/organisms/navTabGroup/navTabGroup.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-nav-tab-group",
            "styleUrls": [
                "./navTabGroup.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./navTabGroup.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "tabs",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "NavTabItem[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "NavTabComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NavTabComponent } from '../../molecules/navTab/navTab.component';\n\nexport interface NavTabItem {\n  label: string;\n  icon: string;\n  route: string;\n  active?: boolean;\n}\n\n@Component({\n  selector: 'app-nav-tab-group',\n  standalone: true,\n  imports: [CommonModule, NavTabComponent],\n  templateUrl: './navTabGroup.component.html',\n  styleUrls: ['./navTabGroup.component.scss'],\n})\nexport class NavTabGroupComponent {\n  @Input() tabs: NavTabItem[] = [];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".nav-tab-group {\r\n  display: flex;\r\n  gap: 1rem;\r\n  border-bottom: 1px solid #e0e0e0;\r\n  padding-bottom: 0.5rem;\r\n  align-items: flex-end;\r\n}\r\n",
                    "styleUrl": "./navTabGroup.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<nav class=\"nav-tab-group\">\n  <app-nav-tab\n    *ngFor=\"let tab of tabs\"\n    [label]=\"tab.label\"\n    [icon]=\"tab.icon\"\n    [route]=\"tab.route\"\n    [active]=\"tab.active ?? false\"\n  />\n</nav>\n"
        },
        {
            "name": "StatCardComponent",
            "id": "component-StatCardComponent-6afbbb34289545519069fff08d9ab371d34161f36a83062281cbc7898381b0d63801c9ca550235291548d9a4c2c25c314d3ece5f25bd510a157dd162806959d0",
            "file": "src/app/components/molecules/statCard/statCard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-stat-card",
            "styleUrls": [
                "./statCard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./statCard.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "count",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "number | string",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "TextComponent",
                    "type": "component"
                },
                {
                    "name": "IconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TextComponent } from '../../atoms/text/text.component';\nimport { IconComponent } from '../../atoms/icon/icon.component';\n\n@Component({\n  selector: 'app-stat-card',\n  standalone: true,\n  imports: [CommonModule, TextComponent, IconComponent],\n  templateUrl: './statCard.component.html',\n  styleUrls: ['./statCard.component.scss'],\n})\nexport class StatCardComponent {\n  @Input() label: string = '';\n  @Input() count: number | string = '';\n  @Input() icon: string = '';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  display: block;\r\n  flex: 1 1 140px;           // responsive card sizing\r\n  max-width: 380px;          // optional cap\r\n  min-width: 140px;\r\n}\r\n\r\n.stat-card {\r\n  position: relative;\r\n  padding: 1rem;\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 8px;\r\n  background-color: white;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\r\n  height: 64px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n\r\n  .card-icon {\r\n    position: absolute;\r\n    top: 0.5rem;\r\n    right: 0.5rem;\r\n  }\r\n\r\n  .card-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 0.25rem;\r\n  }\r\n}\r\n",
                    "styleUrl": "./statCard.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"stat-card\">\n  <div class=\"card-icon\">\n    <app-icon [name]=\"icon\" size=\"20px\" colour=\"#af15fd\" />\n  </div>\n\n  <div class=\"card-content\">\n    <app-text [content]=\"count.toString()\" size=\"lg\" weight=\"bold\" />\n    <app-text [content]=\"label\" size=\"md\" />\n  </div>\n</div>\n"
        },
        {
            "name": "StatCardGroupComponent",
            "id": "component-StatCardGroupComponent-132c7cce5907fbc1ae9c76fad76709dd8f45c4ddad5d45de80493ab0386503224cf698f096b69f1e66674fd4157f0708c47a79c6dbf91e24de77c6190440f6a1",
            "file": "src/app/components/organisms/statCardGroup/statCardGroup.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-stat-card-group",
            "styleUrls": [
                "./statCardGroup.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./statCardGroup.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "cards",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "StatCardItem[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "StatCardComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StatCardComponent } from '../../molecules/statCard/statCard.component';\n\nexport interface StatCardItem {\n  count: number | string;\n  label: string;\n  icon: string;\n}\n\n@Component({\n  selector: 'app-stat-card-group',\n  standalone: true,\n  imports: [CommonModule, StatCardComponent],\n  templateUrl: './statCardGroup.component.html',\n  styleUrls: ['./statCardGroup.component.scss'],\n})\nexport class StatCardGroupComponent {\n  @Input() cards: StatCardItem[] = [];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".stat-card-group {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 1rem;\r\n  //padding: 1rem;\r\n  width: 100%;\r\n  margin: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\n\r\n",
                    "styleUrl": "./statCardGroup.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"stat-card-group\">\n  <app-stat-card\n    *ngFor=\"let card of cards\"\n    [count]=\"card.count\"\n    [label]=\"card.label\"\n    [icon]=\"card.icon\"\n  />\n</div>\n"
        },
        {
            "name": "TabGroupComponent",
            "id": "component-TabGroupComponent-c52361acedb37a22315a2ddf6bbceafd3cf94e64c1594615cd4b0e1f92d479d5eda84ea4984a3d40c7a7ebd1e3d4e75999c60c10fadfa3bec6d4854cfc7ea7da",
            "file": "src/app/components/molecules/filterTabGroup/filterTabGroup.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tab-group",
            "styleUrls": [
                "./filterTabGroup.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./filterTabGroup.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "tabs",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "FilterTab[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "tabSelected",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "selectedTab",
                    "defaultValue": "signal('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WritableSignal<string>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "isActive",
                    "args": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectTab",
                    "args": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FilterTabButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, signal, WritableSignal, computed } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FilterTabButtonComponent } from '../../atoms/filterTabButton/filterTabButton.component';\n\nexport interface FilterTab {\n  label: string;\n  count: number;\n}\n\n@Component({\n  selector: 'app-tab-group',\n  standalone: true,\n  imports: [CommonModule, FilterTabButtonComponent],\n  templateUrl: './filterTabGroup.component.html',\n  styleUrls: ['./filterTabGroup.component.scss'],\n})\nexport class TabGroupComponent {\n  @Input() tabs: FilterTab[] = [];\n\n  // signal to track the selected tab label\n  selectedTab: WritableSignal<string> = signal(''); // signal-based\n\n  @Output() tabSelected = new EventEmitter<string>();\n\n  selectTab(label: string): void {\n    this.selectedTab.set(label);\n    this.tabSelected.emit(label);\n  }\n\n  isActive(label: string): boolean {\n    return this.selectedTab() === label;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".filter-tab-group {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  column-gap: 2px;\r\n  row-gap: 0.4rem;\r\n}\r\n",
                    "styleUrl": "./filterTabGroup.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"filter-tab-group\">\n  <app-filter-tab-button\n    *ngFor=\"let tab of tabs\"\n    [label]=\"tab.label\"\n    [count]=\"tab.count\"\n    [active]=\"isActive(tab.label)\"\n    (selected)=\"selectTab(tab.label)\"\n  />\n</div>\n"
        },
        {
            "name": "TableHeaderComponent",
            "id": "component-TableHeaderComponent-d9798630b9d634c4e0e20b4b0ccc4fa3c8195c11ebdf484f3200e5ab1a97d2ff7e7e80bd4f92f09c7086119a9c191ab867aabf11052f4587a1640df8b9620df3",
            "file": "src/app/components/molecules/tableHeader/tableHeader.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-table-header",
            "styleUrls": [
                "./tableHeader.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tableHeader.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "allChecked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "sortDirection",
                    "defaultValue": "'asc'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "\"asc\" | \"desc\"",
                    "decorators": []
                },
                {
                    "name": "sortKey",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "sortChange",
                    "defaultValue": "new EventEmitter<{ key: string; direction: 'asc' | 'desc' }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "EventEmitter"
                },
                {
                    "name": "toggleAll",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleToggleAll",
                    "args": [
                        {
                            "name": "checked",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "checked",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleSort",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "TextComponent",
                    "type": "component"
                },
                {
                    "name": "IconComponent",
                    "type": "component"
                },
                {
                    "name": "CheckboxComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TextComponent } from '../../atoms/text/text.component';\nimport { IconComponent } from '../../atoms/icon/icon.component';\nimport { CheckboxComponent } from '../../atoms/checkbox/checkbox.component';\n\n@Component({\n  selector: 'app-table-header',\n  standalone: true,\n  imports: [CommonModule, TextComponent, IconComponent, CheckboxComponent],\n  templateUrl: './tableHeader.component.html',\n  styleUrls: ['./tableHeader.component.scss'],\n})\nexport class TableHeaderComponent {\n  @Input() sortKey: string = '';\n  @Input() sortDirection: 'asc' | 'desc' = 'asc';\n  @Input() allChecked: boolean = false;\n\n  @Output() sortChange = new EventEmitter<{ key: string; direction: 'asc' | 'desc' }>();\n  @Output() toggleAll = new EventEmitter<boolean>();\n\n  toggleSort(key: string): void {\n    const newDirection = (key === this.sortKey && this.sortDirection === 'asc') ? 'desc' : 'asc';\n    this.sortChange.emit({ key, direction: newDirection });\n  }\n\n  handleToggleAll(checked: boolean) {\n    this.toggleAll.emit(checked);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".table-header-row {\r\n  display: table;\r\n  width: 100%;\r\n  table-layout: fixed;\r\n\r\n  th {\r\n    padding: 0.75rem 1rem;\r\n    text-align: left;\r\n    border-bottom: 2px solid #e0e0e0;\r\n    -webkit-user-select: none;\r\n    user-select: none;\r\n    vertical-align: middle;\r\n\r\n    &.checkbox-cell {\r\n      width: 60px;\r\n      text-align: center;\r\n      padding: 0;\r\n    }\r\n\r\n    &.state-cell {\r\n      width: 160px;\r\n      text-align: left;\r\n    }\r\n\r\n    &.file-number-cell {\r\n      width: auto;\r\n      text-align: left;\r\n    }\r\n\r\n    &.divider-col {\r\n      width: 1px;\r\n      padding: 0;\r\n      background-color: #e0e0e0;\r\n    }\r\n\r\n    &.action-cell {\r\n      width: 200px;\r\n      text-align: left;\r\n    }\r\n\r\n    &.sortable {\r\n      cursor: pointer;\r\n    }\r\n\r\n    .th-content {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 0.25rem;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./tableHeader.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<tr class=\"table-header-row\">\n  <th class=\"checkbox-cell\">\n    <app-checkbox\n    [checked]=\"allChecked\"\n    (checkedChange)=\"handleToggleAll($event)\"\n    />\n  </th>\n\n  <th class=\"state-cell\">\n    <app-text content=\"State\" weight=\"medium\" size=\"md\" />\n  </th>\n\n  <th class=\"sortable\" (click)=\"toggleSort('fileNumber')\">\n    <div class=\"th-content\">\n      <app-text content=\"File number\" weight=\"medium\" size=\"md\" />\n      <app-icon\n        *ngIf=\"sortKey === 'fileNumber'\"\n        [name]=\"sortDirection === 'asc' ? 'arrow_upward' : 'arrow_downward'\"\n        size=\"16px\"\n      />\n    </div>\n  </th>\n\n  <th class=\"divider-col\" aria-hidden=\"true\"></th>\n\n  <th class=\"action-cell\">\n    <app-text content=\"Action\" weight=\"medium\" size=\"md\" />\n  </th>\n</tr>\n"
        },
        {
            "name": "TableRowComponent",
            "id": "component-TableRowComponent-59c610e8cfbc922426ed38c68e72f0b3734a261217322f1d78a38939e2dcb0884d647a096309b806327960a3e111ec3d142a53c02798eaf2c24ec9a1cfd2c8fb",
            "file": "src/app/components/molecules/tableRow/tableRow.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-table-row",
            "styleUrls": [
                "./tableRow.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tableRow.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "fileNumber",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "number | string",
                    "decorators": []
                },
                {
                    "name": "selected",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "state",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "consult",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "EventEmitter"
                },
                {
                    "name": "selectChange",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getBadgeVariant",
                    "args": [
                        {
                            "name": "state",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "\"info\" | \"success\" | \"warning\" | \"danger\"",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleConsult",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleSelect",
                    "args": [
                        {
                            "name": "checked",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "checked",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "CheckboxComponent",
                    "type": "component"
                },
                {
                    "name": "TextComponent",
                    "type": "component"
                },
                {
                    "name": "BadgeComponent",
                    "type": "component"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CheckboxComponent } from '../../atoms/checkbox/checkbox.component';\nimport { TextComponent } from '../../atoms/text/text.component';\nimport { BadgeComponent } from '../../atoms/badge/badge.component';\nimport { ButtonComponent } from '../../atoms/button/button.component';\n\n@Component({\n  selector: 'app-table-row',\n  standalone: true,\n  imports: [\n    CommonModule,\n    CheckboxComponent,\n    TextComponent,\n    BadgeComponent,\n    ButtonComponent,\n  ],\n  templateUrl: './tableRow.component.html',\n  styleUrls: ['./tableRow.component.scss'],\n})\nexport class TableRowComponent {\n  @Input() selected: boolean = false;\n  @Input() state: string = '';\n  @Input() fileNumber: number | string = '';\n  @Output() selectChange = new EventEmitter<boolean>();\n  @Output() consult = new EventEmitter<void>();\n\n  toggleSelect(checked: boolean): void {\n    this.selectChange.emit(checked);\n  }\n\n  handleConsult(): void {\n    this.consult.emit();\n  }\n\n  getBadgeVariant(state: string): 'info' | 'success' | 'warning' | 'danger' {\n    const map: Record<string, 'info' | 'success' | 'warning' | 'danger'> = {\n      fraud: 'danger',\n      validated: 'success',\n      'refund request': 'warning',\n      'post-payment': 'info',\n      identity: 'info',\n      total: 'info', // if needed\n    };\n\n    return map[state.toLowerCase()] || 'info';\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".table-row {\r\n  display: table;\r\n  width: 100%;\r\n\r\n  td {\r\n    padding: 0.75rem 1rem;\r\n    border-bottom: 1px solid #e0e0e0;\r\n    vertical-align: middle;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n    height: 50px;\r\n\r\n    &.checkbox-cell {\r\n      width: 60px;\r\n      text-align: center;\r\n      padding: 0;\r\n    }\r\n\r\n    &.state-cell {\r\n      width: 160px;\r\n      align-items: left;\r\n    }\r\n\r\n    &.file-number-cell {\r\n      text-align: left;\r\n      width: auto; // allow it to grow\r\n    }\r\n\r\n    &.divider-cell {\r\n      width: 1px;\r\n      background-color: #e0e0e0;\r\n      padding: 0;\r\n    }\r\n\r\n    &.action-cell {\r\n      width: 200px;\r\n      text-align: center;\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    background-color: #f9f9f9;\r\n  }\r\n}\r\n",
                    "styleUrl": "./tableRow.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<tr class=\"table-row\">\n  <td class=\"checkbox-cell\">\n    <app-checkbox\n      [checked]=\"selected\"\n      (checkedChange)=\"toggleSelect($event)\"\n      [colour]=\"'#af15fd'\"\n    />\n  </td>\n\n  <td class=\"state-cell\">\n    <app-badge\n    [label]=\"state\"\n    [variant]=\"getBadgeVariant(state)\"\n    fontSize=\"1.1rem\"\n    fontWeight=\"500\"\n    height=\"32px\"\n    width=\"150px\"\n  />\n  </td>\n\n  <td class=\"file-number-cell\">\n    <app-text [content]=\"fileNumber.toString()\" />\n  </td>\n\n  <td class=\"divider-cell\" aria-hidden=\"true\"></td>\n\n  <td class=\"action-cell\">\n    <app-button label=\"Consult\" variant=\"primary\" [borderless]=\"true\" (click)=\"handleConsult()\" />\n  </td>\n</tr>\n"
        },
        {
            "name": "TableRowGroupComponent",
            "id": "component-TableRowGroupComponent-30aa7958f38102f869c10c3ee9e3b3613f202401be72ab092d0a6ae158c92fe6fff93505ca75872bb055e66fc1d6354c1975c45b1c6a085001fa4e94da7329b7",
            "file": "src/app/components/organisms/tableRowGroup/tableRowGroup.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-table-row-group",
            "styleUrls": [
                "./tableRowGroup.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tableRowGroup.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "rows",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "TableRowData[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "consultClicked",
                    "defaultValue": "new EventEmitter<string | number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter"
                },
                {
                    "name": "rowSelected",
                    "defaultValue": "new EventEmitter<{ id: string | number; selected: boolean }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleConsultClick",
                    "args": [
                        {
                            "name": "id",
                            "type": "string | number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string | number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleSelectChange",
                    "args": [
                        {
                            "name": "id",
                            "type": "string | number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string | number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "TableRowComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TableRowComponent } from '../../molecules/tableRow/tableRow.component';\n\nexport interface TableRowData {\n  id: string | number;\n  state: string;\n  fileNumber: string;\n  selected?: boolean;\n}\n\n@Component({\n  selector: 'app-table-row-group',\n  standalone: true,\n  imports: [CommonModule, TableRowComponent],\n  templateUrl: './tableRowGroup.component.html',\n  styleUrls: ['./tableRowGroup.component.scss'],\n})\nexport class TableRowGroupComponent {\n  @Input() rows: TableRowData[] = [];\n\n  @Output() rowSelected = new EventEmitter<{ id: string | number; selected: boolean }>();\n  @Output() consultClicked = new EventEmitter<string | number>();\n\n  handleSelectChange(id: string | number, value: any) {\n  const checked = value as boolean;\n  this.rowSelected.emit({ id, selected: checked });\n}\n\n  handleConsultClick(id: string | number) {\n    this.consultClicked.emit(id);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".table-row-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n}\r\n",
                    "styleUrl": "./tableRowGroup.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"table-row-group\">\n  <app-table-row\n    *ngFor=\"let row of rows\"\n    [state]=\"row.state\"\n    [fileNumber]=\"row.fileNumber\"\n    [selected]=\"row.selected ?? false\"\n    (selectChange)=\"handleSelectChange(row.id, $event)\"\n    (consult)=\"handleConsultClick(row.id)\"\n  />\n</div>\n"
        },
        {
            "name": "TextComponent",
            "id": "component-TextComponent-24661751fcc23cf7d7c5a24a2543043e1577fd3795bfb357ecf26bdd8bc0639ec1a1c704dfb8a7546a3b68b58162ef56b8077801876813bcf34464ba10eae7ca",
            "file": "src/app/components/atoms/text/text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-text",
            "styleUrls": [
                "./text.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./text.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "colour",
                    "defaultValue": "'#333'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "content",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "\"sm\" | \"md\" | \"lg\"",
                    "decorators": []
                },
                {
                    "name": "weight",
                    "defaultValue": "'normal'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "\"normal\" | \"medium\" | \"bold\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-text',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './text.component.html',\r\n  styleUrls: ['./text.component.scss'],\r\n})\r\nexport class TextComponent {\r\n  @Input() content: string = '';\r\n  @Input() size: 'sm' | 'md' | 'lg' = 'md';\r\n  @Input() weight: 'normal' | 'medium' | 'bold' = 'normal';\r\n  @Input() colour: string = '#333';\r\n}\r\n// This component is a simple text display component that allows customization of content, size, weight, and colour.\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "span {\r\n  font-family: 'Segoe UI', sans-serif;\r\n\r\n\r\n  &.sm {\r\n    font-size: 0.8rem;\r\n  }\r\n\r\n  &.md {\r\n    font-size: 1rem;\r\n  }\r\n\r\n  &.lg {\r\n    font-size: 2rem;\r\n  }\r\n\r\n  &.normal {\r\n    font-weight: 400;\r\n  }\r\n\r\n  &.medium {\r\n    font-weight: 500;\r\n  }\r\n\r\n  &.bold {\r\n    font-weight: 700;\r\n  }\r\n}\r\n",
                    "styleUrl": "./text.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<span\r\n  [ngClass]=\"[size, weight]\"\r\n  [style.color]=\"colour\"\r\n>\r\n  {{ content }}\r\n</span>\r\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n  providers: [\r\n    provideBrowserGlobalErrorListeners(),\r\n    provideZoneChangeDetection({ eventCoalescing: true }),\r\n    provideRouter(routes)\r\n  ]\r\n}"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n  providers: [\r\n    provideBrowserGlobalErrorListeners(),\r\n    provideZoneChangeDetection({ eventCoalescing: true }),\r\n    provideRouter(routes)\r\n  ]\r\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/badge/badge.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BadgeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/filterTabButton/filterTabButton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilterTabButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/icon/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/atoms/text/text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/molecules/actionBar/actionBar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ActionBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/molecules/filterTabGroup/filterTabGroup.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/molecules/filterTabGroup/filterTabGroup.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FilterTab",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/molecules/navTab/navTab.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavTabComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/molecules/statCard/statCard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StatCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/molecules/tableHeader/tableHeader.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/components/molecules/tableRow/tableRow.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableRowComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/filterActionGroup/filterActionGroup.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilterActionGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/filterActionGroup/filterActionGroup.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FilterTab",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/navTabGroup/navTabGroup.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavTabGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/navTabGroup/navTabGroup.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "NavTabItem",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/statCardGroup/statCardGroup.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StatCardGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/statCardGroup/statCardGroup.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "StatCardItem",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/tableRowGroup/tableRowGroup.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableRowGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/organisms/tableRowGroup/tableRowGroup.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TableRowData",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/pages/mainPage/mainPage.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MainPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/templates/mainGroup/mainGroup.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MainGroupTemplateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            }
        ]
    }
}